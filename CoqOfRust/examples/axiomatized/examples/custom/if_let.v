(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Parameter order : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.

Axiom Function_order : M.IsFunction "if_let::order" order.

(*
Enum Container
{
  const_params := [];
  ty_params := [];
  variants :=
    [
      {
        name := "Left";
        item := StructTuple [ Ty.path "i32" ];
        discriminant := None;
      };
      {
        name := "Right";
        item := StructTuple [ Ty.path "i32" ];
        discriminant := None;
      };
      {
        name := "Empty";
        item := StructTuple [];
        discriminant := None;
      }
    ];
}
*)

Parameter extract_value : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.

Axiom Function_extract_value : M.IsFunction "if_let::extract_value" extract_value.

Parameter main : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.

Axiom Function_main : M.IsFunction "if_let::main" main.
