(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Parameter decode_input : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.

Axiom Function_decode_input : M.IsFunction "wildcard_selector::decode_input" decode_input.

(* StructTuple
  {
    name := "WildcardSelector";
    const_params := [];
    ty_params := [];
    fields := [];
  } *)

Module Impl_wildcard_selector_WildcardSelector.
  Definition Self : Ty.t := Ty.path "wildcard_selector::WildcardSelector".
  
  Parameter new : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_new : M.IsAssociatedFunction Self "new" new.
  Smpl Add apply AssociatedFunction_new : is_associated.
  
  Parameter wildcard : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_wildcard : M.IsAssociatedFunction Self "wildcard" wildcard.
  Smpl Add apply AssociatedFunction_wildcard : is_associated.
  
  Parameter wildcard_complement : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_wildcard_complement :
    M.IsAssociatedFunction Self "wildcard_complement" wildcard_complement.
  Smpl Add apply AssociatedFunction_wildcard_complement : is_associated.
End Impl_wildcard_selector_WildcardSelector.
