(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Parameter multiply : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.

Axiom Function_multiply : M.IsFunction "scoping_rules_lifetimes_coercion::multiply" multiply.
Smpl Add apply Function_multiply : is_function.

Parameter choose_first : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.

Axiom Function_choose_first :
  M.IsFunction "scoping_rules_lifetimes_coercion::choose_first" choose_first.
Smpl Add apply Function_choose_first : is_function.

Parameter main : (list Value.t) -> (list Ty.t) -> (list Value.t) -> M.

Axiom Function_main : M.IsFunction "scoping_rules_lifetimes_coercion::main" main.
Smpl Add apply Function_main : is_function.
